{
  "keys": {},
  "groups": {
    "mainwindow": {
      "keys": {
        "geometry": {
          "repr(QByteArray.hex)": "QtCore.QByteArray(b'01d9d0cb000300000000000400000267000003bd000004aa0000000400000267000003bd000004aa000000000000000007800000000400000267000003bd000004aa')",
          "type": "repr(QByteArray.hex)",
          "pretty-print": "       g       g            g    "
        },
        "state": {
          "repr(QByteArray.hex)": "QtCore.QByteArray(b'000000ff00000000fd0000000100000003000003ba0000021afc010000000afc00000000000003ba0000019800fffffffc0200000002fb0000006c007200710074005f007200650063006f006e006600690067007500720065005f005f0050006100720061006d005f005f0031005f005f005f0070006c007500670069006e0063006f006e007400610069006e00650072005f0074006f0070005f00770069006400670065007401000000140000046b0000000000000000fc000000140000021a0000005000fffffffc0100000002fb0000005a007200710074005f0069006d006100670065005f0076006900650077005f005f0049006d0061006700650056006900650077005f005f0032005f005f0049006d00610067006500560069006500770057006900640067006500740100000000000001da000000d300fffffffb0000005a007200710074005f0069006d006100670065005f0076006900650077005f005f0049006d0061006700650056006900650077005f005f0031005f005f0049006d006100670065005600690065007700570069006400670065007401000001e0000001da000000bf00fffffffb00000072007200710074005f0073006500720076006900630065005f00630061006c006c00650072005f005f005300650072007600690063006500430061006c006c00650072005f005f0031005f005f005300650072007600690063006500430061006c006c006500720057006900640067006500740100000000000003ba0000000000000000fb0000006a007200710074005f0072006f0062006f0074005f007300740065006500720069006e0067005f005f0052006f0062006f0074005300740065006500720069006e0067005f005f0031005f005f0052006f0062006f0074005300740065006500720069006e0067005500690100000000000001760000000000000000fc00000000000003ba0000000000fffffffc0200000002fb00000058007200710074005f007000750062006c00690073006800650072005f005f005000750062006c00690073006800650072005f005f0031005f005f005000750062006c0069007300680065007200570069006400670065007401000000140000044b0000000000000000fb00000044007200710074005f00670072006100700068005f005f0052006f007300470072006100700068005f005f0031005f005f0052006f0073004700720061007000680055006901000000140000044b0000000000000000fb0000004c007200710074005f00740066005f0074007200650065005f005f0052006f0073005400660054007200650065005f005f0031005f005f0052006f0073005400660054007200650065005500690100000000000003ba0000000000000000fb00000022007200710074005f0074006f0070005f005f0054004f0050005f005f0031005f005f0100000000000003ba0000000000000000fb0000004c007200710074005f0063006f006e0073006f006c0065005f005f0043006f006e0073006f006c0065005f005f0031005f005f0043006f006e0073006f006c00650057006900640067006500740100000000000003ba0000000000000000fb0000007c007200710074005f006a006f0069006e0074005f007400720061006a006500630074006f00720079005f0070006c006f0074005f005f004a006f0069006e0074005400720061006a006500630074006f007200790050006c006f0074005f005f0031005f005f006d00610069006e005f0077006900640067006500740100000000000003ba0000000000000000fb000000b4007200710074005f006a006f0069006e0074005f007400720061006a006500630074006f00720079005f0063006f006e00740072006f006c006c00650072005f005f004a006f0069006e0074005400720061006a006500630074006f007200790043006f006e00740072006f006c006c00650072005f005f0031005f005f004a006f0069006e0074005400720061006a006500630074006f007200790043006f006e00740072006f006c006c00650072005500690100000000000003ba0000000000000000fb00000042007200710074005f006d00730067005f005f004d0065007300730061006700650073005f005f0031005f005f006d0065007300730061006700650073002e007500690100000521000002570000000000000000000003ba0000000000000004000000040000000800000008fc00000001000000030000000100000036004d0069006e0069006d0069007a006500640044006f0063006b00570069006400670065007400730054006f006f006c0062006100720000000000ffffffff0000000000000000')",
          "type": "repr(QByteArray.hex)",
          "pretty-print": "                                                                                       k                 Zrqt_image_view__ImageView__2__ImageViewWidget          Zrqt_image_view__ImageView__1__ImageViewWidget          rrqt_service_caller__ServiceCaller__1__ServiceCallerWidget          jrqt_robot_steering__RobotSteering__1__RobotSteeringUi
        }
      },
      "groups": {
        "toolbar_areas": {
          "keys": {
            "MinimizedDockWidgetsToolbar": {
              "repr": "8",
              "type": "repr"
            }
          },
          "groups": {}
        }
      }
    },
    "pluginmanager": {
      "keys": {
        "running-plugins": {
          "repr": "{'rqt_image_view/ImageView': [1, 2]}",
          "type": "repr"
        }
      },
      "groups": {
        "plugin__rqt_console__Console__1": {
          "keys": {},
          "groups": {
            "dock_widget__ConsoleWidget": {
              "keys": {
                "dock_widget_title": {
                  "repr": "'Console'",
                  "type": "repr"
                },
                "dockable": {
                  "repr": "'true'",
                  "type": "repr"
                },
                "parent": {
                  "repr": "None",
                  "type": "repr"
                }
              },
              "groups": {}
            },
            "plugin": {
              "keys": {
                "exclude_filters": {
                  "repr": "'severity'",
                  "type": "repr"
                },
                "filter_splitter": {
                  "repr(QByteArray.hex)": "QtCore.QByteArray(b'000000ff000000010000000200000070000000700100000009010000000200')",
                  "type": "repr(QByteArray.hex)",
                  "pretty-print": "       p p     "
                },
                "highlight_filters": {
                  "repr": "'message'",
                  "type": "repr"
                },
                "message_limit": {
                  "repr": "'20000'",
                  "type": "repr"
                },
                "paused": {
                  "repr": "'false'",
                  "type": "repr"
                },
                "settings_exist": {
                  "repr": "'true'",
                  "type": "repr"
                },
                "show_highlighted_only": {
                  "repr": "'false'",
                  "type": "repr"
                },
                "table_splitter": {
                  "repr(QByteArray.hex)": "QtCore.QByteArray(b'000000ff000000010000000200000046000000e90100000009010000000200')",
                  "type": "repr(QByteArray.hex)",
                  "pretty-print": "       F       "
                }
              },
              "groups": {
                "exclude_filter_0": {
                  "keys": {
                    "enabled": {
                      "repr": "'true'",
                      "type": "repr"
                    },
                    "itemlist": {
                      "repr": "''",
                      "type": "repr"
                    }
                  },
                  "groups": {}
                },
                "highlight_filter_0": {
                  "keys": {
                    "enabled": {
                      "repr": "'true'",
                      "type": "repr"
                    },
                    "regex": {
                      "repr": "'false'",
                      "type": "repr"
                    },
                    "text": {
                      "repr": "''",
                      "type": "repr"
                    }
                  },
                  "groups": {}
                }
              }
            }
          }
        },
        "plugin__rqt_graph__RosGraph__1": {
          "keys": {},
          "groups": {
            "dock_widget__RosGraphUi": {
              "keys": {
                "dock_widget_title": {
                  "repr": "'Node Graph'",
                  "type": "repr"
                },
                "dockable": {
                  "repr": "'true'",
                  "type": "repr"
                },
                "parent": {
                  "repr": "None",
                  "type": "repr"
                }
              },
              "groups": {}
            },
            "plugin": {
              "keys": {
                "actionlib_check_box_state": {
                  "repr": "'true'",
                  "type": "repr"
                },
                "auto_fit_graph_check_box_state": {
                  "repr": "'true'",
                  "type": "repr"
                },
                "dead_sinks_check_box_state": {
                  "repr": "'true'",
                  "type": "repr"
                },
                "filter_line_edit_text": {
                  "repr": "'/'",
                  "type": "repr"
                },
                "graph_type_combo_box_index": {
                  "repr": "'2'",
                  "type": "repr"
                },
                "group_image_check_box_state": {
                  "repr": "'true'",
                  "type": "repr"
                },
                "group_tf_check_box_state": {
                  "repr": "'true'",
                  "type": "repr"
                },
                "hide_dynamic_reconfigure_check_box_state": {
                  "repr": "'true'",
                  "type": "repr"
                },
                "hide_tf_nodes_check_box_state": {
                  "repr": "'false'",
                  "type": "repr"
                },
                "highlight_connections_check_box_state": {
                  "repr": "'true'",
                  "type": "repr"
                },
                "leaf_topics_check_box_state": {
                  "repr": "'false'",
                  "type": "repr"
                },
                "namespace_cluster_spin_box_value": {
                  "repr": "'2'",
                  "type": "repr"
                },
                "quiet_check_box_state": {
                  "repr": "'true'",
                  "type": "repr"
                },
                "topic_filter_line_edit_text": {
                  "repr": "'/'",
                  "type": "repr"
                },
                "unreachable_check_box_state": {
                  "repr": "'true'",
                  "type": "repr"
                }
              },
              "groups": {}
            }
          }
        },
        "plugin__rqt_image_view__ImageView__1": {
          "keys": {},
          "groups": {
            "dock_widget__ImageViewWidget": {
              "keys": {
                "dock_widget_title": {
                  "repr": "'Image View'",
                  "type": "repr"
                },
                "dockable": {
                  "repr": "True",
                  "type": "repr"
                },
                "parent": {
                  "repr": "None",
                  "type": "repr"
                }
              },
              "groups": {}
            },
            "plugin": {
              "keys": {
                "color_scheme": {
                  "repr": "3",
                  "type": "repr"
                },
                "dynamic_range": {
                  "repr": "False",
                  "type": "repr"
                },
                "max_range": {
                  "repr": "0.5",
                  "type": "repr"
                },
                "mouse_pub_topic": {
                  "repr": "'/depth_to_rgb/image_raw_mouse_left'",
                  "type": "repr"
                },
                "num_gridlines": {
                  "repr": "0",
                  "type": "repr"
                },
                "publish_click_location": {
                  "repr": "False",
                  "type": "repr"
                },
                "rotate": {
                  "repr": "0",
                  "type": "repr"
                },
                "smooth_image": {
                  "repr": "False",
                  "type": "repr"
                },
                "toolbar_hidden": {
                  "repr": "False",
                  "type": "repr"
                },
                "topic": {
                  "repr": "'/depth_to_rgb/image_raw'",
                  "type": "repr"
                },
                "zoom1": {
                  "repr": "False",
                  "type": "repr"
                }
              },
              "groups": {}
            }
          }
        },
        "plugin__rqt_image_view__ImageView__2": {
          "keys": {},
          "groups": {
            "dock_widget__ImageViewWidget": {
              "keys": {
                "dock_widget_title": {
                  "repr": "'Image View (2)'",
                  "type": "repr"
                },
                "dockable": {
                  "repr": "True",
                  "type": "repr"
                },
                "parent": {
                  "repr": "None",
                  "type": "repr"
                }
              },
              "groups": {}
            },
            "plugin": {
              "keys": {
                "color_scheme": {
                  "repr": "3",
                  "type": "repr"
                },
                "dynamic_range": {
                  "repr": "False",
                  "type": "repr"
                },
                "max_range": {
                  "repr": "10.0",
                  "type": "repr"
                },
                "mouse_pub_topic": {
                  "repr": "'/rgb/image_raw_mouse_left'",
                  "type": "repr"
                },
                "num_gridlines": {
                  "repr": "0",
                  "type": "repr"
                },
                "publish_click_location": {
                  "repr": "False",
                  "type": "repr"
                },
                "rotate": {
                  "repr": "0",
                  "type": "repr"
                },
                "smooth_image": {
                  "repr": "False",
                  "type": "repr"
                },
                "toolbar_hidden": {
                  "repr": "False",
                  "type": "repr"
                },
                "topic": {
                  "repr": "'/rgb/image_raw'",
                  "type": "repr"
                },
                "zoom1": {
                  "repr": "False",
                  "type": "repr"
                }
              },
              "groups": {}
            }
          }
        },
        "plugin__rqt_joint_trajectory_controller__JointTrajectoryController__1": {
          "keys": {},
          "groups": {
            "dock_widget__JointTrajectoryControllerUi": {
              "keys": {
                "dock_widget_title": {
                  "repr": "'Joint trajectory controller'",
                  "type": "repr"
                },
                "dockable": {
                  "repr": "'true'",
                  "type": "repr"
                },
                "parent": {
                  "repr": "None",
                  "type": "repr"
                }
              },
              "groups": {}
            },
            "plugin": {
              "keys": {
                "cm_ns": {
                  "repr": "None",
                  "type": "repr"
                },
                "jtc_name": {
                  "repr": "None",
                  "type": "repr"
                }
              },
              "groups": {}
            }
          }
        },
        "plugin__rqt_joint_trajectory_plot__JointTrajectoryPlot__1": {
          "keys": {},
          "groups": {
            "dock_widget__main_widget": {
              "keys": {
                "dock_widget_title": {
                  "repr": "'JointTrajectoryPlot'",
                  "type": "repr"
                },
                "dockable": {
                  "repr": "'true'",
                  "type": "repr"
                },
                "parent": {
                  "repr": "None",
                  "type": "repr"
                }
              },
              "groups": {}
            }
          }
        },
        "plugin__rqt_publisher__Publisher__1": {
          "keys": {},
          "groups": {
            "dock_widget__PublisherWidget": {
              "keys": {
                "dock_widget_title": {
                  "repr": "'Message Publisher'",
                  "type": "repr"
                },
                "dockable": {
                  "repr": "'true'",
                  "type": "repr"
                },
                "parent": {
                  "repr": "None",
                  "type": "repr"
                }
              },
              "groups": {}
            },
            "plugin": {
              "keys": {
                "publishers": {
                  "repr": "\"[{'topic_name': '/test', 'type_name': 'std_msgs/String', 'rate': 1.0, 'enabled': False, 'publisher_id': 0, 'counter': 0, 'expressions': {'/test/data': 'testing'}}]\"",
                  "type": "repr"
                }
              },
              "groups": {}
            }
          }
        },
        "plugin__rqt_reconfigure__Param__1": {
          "keys": {},
          "groups": {
            "plugin": {
              "keys": {
                "_splitter": {
                  "repr(QByteArray.hex)": "QtCore.QByteArray(b'000000ff000000010000000200000140000000630100000009010000000200')",
                  "type": "repr(QByteArray.hex)",
                  "pretty-print": "       @ c     "
                },
                "expanded_nodes": {
                  "repr": "['/camera', '/camera/stereo_module']",
                  "type": "repr"
                },
                "selected_nodes": {
                  "repr": "['/camera/align_to_color', '/camera/stereo_module/auto_exposure_roi', '/camera/stereo_module']",
                  "type": "repr"
                },
                "splitter": {
                  "repr(QByteArray.hex)": "QtCore.QByteArray(b'000000ff0000000100000002000000ae0000006401ffffffff010000000100')",
                  "type": "repr(QByteArray.hex)",
                  "pretty-print": "         d     "
                },
                "text": {
                  "repr": "''",
                  "type": "repr"
                }
              },
              "groups": {}
            }
          }
        },
        "plugin__rqt_robot_steering__RobotSteering__1": {
          "keys": {},
          "groups": {
            "dock_widget__RobotSteeringUi": {
              "keys": {
                "dock_widget_title": {
                  "repr": "'Robot Steering'",
                  "type": "repr"
                },
                "dockable": {
                  "repr": "'true'",
                  "type": "repr"
                },
                "parent": {
                  "repr": "None",
                  "type": "repr"
                }
              },
              "groups": {}
            },
            "plugin": {
              "keys": {
                "topic": {
                  "repr": "'/cmd_vel'",
                  "type": "repr"
                },
                "vw_max": {
                  "repr": "'3'",
                  "type": "repr"
                },
                "vw_min": {
                  "repr": "'-3'",
                  "type": "repr"
                },
                "vx_max": {
                  "repr": "'1'",
                  "type": "repr"
                },
                "vx_min": {
                  "repr": "'-1'",
                  "type": "repr"
                }
              },
              "groups": {}
            }
          }
        },
        "plugin__rqt_service_caller__ServiceCaller__1": {
          "keys": {},
          "groups": {
            "dock_widget__ServiceCallerWidget": {
              "keys": {
                "dock_widget_title": {
                  "repr": "'Service Caller'",
                  "type": "repr"
                },
                "dockable": {
                  "repr": "'true'",
                  "type": "repr"
                },
                "parent": {
                  "repr": "None",
                  "type": "repr"
                }
              },
              "groups": {}
            },
            "plugin": {
              "keys": {
                "current_service_name": {
                  "repr": "'/apply_planning_scene'",
                  "type": "repr"
                },
                "splitter_orientation": {
                  "repr": "'2'",
                  "type": "repr"
                }
              },
              "groups": {}
            }
          }
        },
        "plugin__rqt_tf_tree__RosTfTree__1": {
          "keys": {},
          "groups": {
            "dock_widget__RosTfTreeUi": {
              "keys": {
                "dock_widget_title": {
                  "repr": "'TF Tree'",
                  "type": "repr"
                },
                "dockable": {
                  "repr": "'true'",
                  "type": "repr"
                },
                "parent": {
                  "repr": "None",
                  "type": "repr"
                }
              },
              "groups": {}
            },
            "plugin": {
              "keys": {
                "auto_fit_graph_check_box_state": {
                  "repr": "'true'",
                  "type": "repr"
                },
                "highlight_connections_check_box_state": {
                  "repr": "'true'",
                  "type": "repr"
                }
              },
              "groups": {}
            }
          }
        },
        "plugin__rqt_top__TOP__1": {
          "keys": {},
          "groups": {
            "plugin": {
              "keys": {
                "filter_text": {
                  "repr": "''",
                  "type": "repr"
                },
                "is_regex": {
                  "repr": "'0'",
                  "type": "repr"
                }
              },
              "groups": {}
            }
          }
        }
      }
    }
  }
}